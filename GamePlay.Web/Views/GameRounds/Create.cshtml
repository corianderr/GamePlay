@model CreateGameRoundViewModel

@{
    ViewBag.Title = "title";
    Layout = "_Layout";
}

<h2>Create Game Round</h2>
<div class="row">
    <div class="col-md-4 mx-auto">
        <form asp-action="Create" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="GameRound.GameId">
            <div class="form-group">
                <label for="gameImage">Game Photo Cover</label>
                <input type="file" class="form-control" id="gameImage" name="gameImage">
            </div>
            <div class="form-group">
                <label asp-for="@Model.GameRound.Date" class="control-label"></label>
                <input asp-for="@Model.GameRound.Date" class="form-control" type="date" id="my-date-input"/>
                <span asp-validation-for="@Model.GameRound.Date" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.GameRound.Place" class="control-label"></label>
                <input asp-for="@Model.GameRound.Place" class="form-control" list="places"/>
                <span asp-validation-for="@Model.GameRound.Place" class="text-danger"></span>
            </div>
            <datalist id="places">
                @foreach(var item in Model.PreviousPlaces)
                {
                    <option value="@item"/>
                }
            </datalist>
            <div>
                <h4 class="d-inline-block mr-3">Players</h4>
                <input type="button" class="btn btn-primary rounded-circle" value="+" onclick="ShowNewPlayer()" style="font-size: 20px;" />
                <hr />
                <div id="newPlayer" class="my-2" style="display: none;">
                    <input id="player-name" class="form-control" placeholder="Enter name" list="players"/>
                    <datalist id="players">
                        @foreach(var item in Model.PreviousOpponents)
                        {
                            <option value="@item.Name"/>
                        }
                    </datalist>
                    <input id="player-role" class="form-control" placeholder="Enter role" />
                    <input id="player-score" class="form-control" placeholder="Enter score" />
                    <input id="player-is-winner" class="form-control" type="checkbox"/>
                    <input id="player-is-registered" class="form-control" type="checkbox"/>
                    <input type="button" value="Add" class="btn btn-light mt-2" onclick="AddPlayer()" />
                </div>
                <table class="table table-bordered" id="player-table">
                    <thead>
                        <tr>
                            <th scope="col">Name</th>
                            <th scope="col">Role</th>
                            <th scope="col">Score</th>
                            <th scope="col">Is Winner?</th>
                            <th scope="col">Is Registered?</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- тут будут добавлять новые -->
                    </tbody>
    
                </table>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" onclick="Send()"/>
            </div>
        </form>
    </div>
</div>

@section Scripts
{
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
    <script>
    document.addEventListener('DOMContentLoaded', function() {
            let now = new Date(),
                maxDate = now.toISOString().substring(0,10);
            $('#my-date-input').prop('max', maxDate);
    });
    
     function ShowNewPlayer() {
            if (!$('#newPlayer').is(':visible')) {
                $('#newPlayer').show();
            }
            else {
                ClearNewPlayer();
                $('#newPlayer').hide();
            }
        }
        function ClearNewPlayer() {
            $('#player-name').val('');
            $('#player-role').val('');
            $('#player-score').val('');
            $("#player-is-winner").attr("checked", false);
            $("#player-is-registered").attr("checked", false);
        }
        function AddPlayer() {
            $('#player-table tbody').append('<tr><td>' + $('#player-name').val() +
                '</td><td>' + $('#player-role').val() +
                '</td><td>' + $('#player-score').val() + '</td><td><input type="checkbox" disabled' + (($('#player-is-winner').prop('checked') === true) ? 'checked' : '') + '/>' +
                '</td><td><input type="checkbox" disabled' + (($('#player-is-registered').prop('checked') === true) ? 'checked' : '') +
                '/></td><td><input type="button" value="✖" class="btn btn-danger float-right" onclick="Delete(this)" /></td></tr>');
            ClearNewPlayer();
            $('#newPlayer').hide();
        }
        
        function Delete(a) {
                $(a).closest('tr').remove()
            }
    
    function Send() {
            let players = [];
            $('#player-table tbody tr').each(function () {
                let player = {
                    Name: $(this).find('td').eq(0).text(),
                    Role: $(this).find('td').eq(1).text(),
                    Score: $(this).find('td').eq(2).text(),
                    IsWinner: $(this).find('td').eq(3).find('input').checked,
                    IsRegistered: $(this).find('td').eq(4).find('input').checked
                };
                console.log(player);
                players.push(player);
            });
            }
    </script>
}